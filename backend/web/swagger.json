{
  "swagger": "2.0",
  "info": {
    "description": "Demo for talk on how Behaviour Driven Development (BDD) can be used to test multiple contexts for modern websites separated into single page applications and REST APIs.\n\nThis demonstrates how you can spin up a front-end and back-end container (which in reality would live in separate repositories) and run behavioural tests against one and both independently",
    "version": "1.0.0",
    "title": "Multi-content BDD Talk"
  },
  "host": "backend:9999",
  "schemes": [
    "http"
  ],
  "paths": {
    "/locations/": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Lists available locations",
        "operationId": "listLocations",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of locations"
          }
        }
      }
    },
    "/locations/{location}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Show information about a single location",
        "operationId": "getLocationInformation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "ID of the location",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve location information"
          }
        }
      }
    },
    "/locations/{location}/years-available": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Show years that entries are available for this location",
        "operationId": "getLocationYearsAvailable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "ID of the location",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve array of years that entries are available for this location"
          }
        }
      }
    },
    "/locations/{location1}/{location2}/years-both-available": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Show years that entries are available for a pair of locations",
        "operationId": "getLocationYearsBothAvailable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location1",
            "in": "path",
            "description": "ID of the first location",
            "required": true,
            "type": "string"
          },
          {
            "name": "location2",
            "in": "path",
            "description": "ID of the second location",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve array of years that entries are available for both locations"
          }
        }
      }
    },
    "/entries/": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "Lists available entries",
        "operationId": "listEntries",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of entries"
          }
        }
      }
    },
    "/entries/{location}": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "List entries from a single location",
        "operationId": "listEntriesByYear",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "ID of the location",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of entries"
          }
        }
      }
    },
    "/entries/{location}/{year}": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "List entries from a location for a year",
        "operationId": "listEntriesByYear",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "ID of the location",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year to retrieve entries for",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of entries"
          }
        }
      }
    },
    "/entries/{location}/{yearFrom}/{yearTo}": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "List entries from a location between a date range",
        "operationId": "listEntriesByYear",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "ID of the location",
            "required": true,
            "type": "string"
          },
          {
            "name": "yearFrom",
            "in": "path",
            "description": "Year to retrieve entries from",
            "required": true,
            "type": "integer"
          },
          {
            "name": "yearTo",
            "in": "path",
            "description": "Year to retrieve entries to",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of entries"
          }
        }
      }
    },
    "/entries/{location1}/{location2}/{year}/compare": {
      "get": {
        "tags": [
          "entries"
        ],
        "summary": "List entries from a pair of locations for a year",
        "operationId": "listEntriesByYear",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location1",
            "in": "path",
            "description": "ID of the first location",
            "required": true,
            "type": "string"
          },
          {
            "name": "location2",
            "in": "path",
            "description": "ID of the second location",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year to retrieve entries for",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of entries"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about this talk on GitHub",
    "url": "https://github.com/magickatt/MultiContextBDDTalk"
  }
}